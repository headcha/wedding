<?xml version="1.0" encoding="UTF-8"?>
<sitemesh>
    <property name="decorators-file" value="/WEB-INF/sitemesh/decorators.xml" /> <!-- decorator 정의 파일 위치 설정-->
    <excludes file="${decorators-file}" />
    <!-- parser를 설정한다. 어떻게 parsing 해서 레이아웃을 입힐 것인지 결정한다.  -->
    <page-parsers>
        <parser content-type="text/html"
                class="com.opensymphony.module.sitemesh.parser.HTMLPageParser" />
        <parser content-type="text/html;charset=UTF-8"
                class="com.opensymphony.module.sitemesh.parser.HTMLPageParser" />
    </page-parsers>
    <!-- mapper를 설정한다.  다양한 레이아웃 결정 방법을 제공한다. -->
    <decorator-mappers>
        <!-- 파라미터에 printable=true 하면 printable이라는 이름의 레이아웃을 적용한다.  -->
        <mapper class="com.opensymphony.module.sitemesh.mapper.PrintableDecoratorMapper">
            <param name="decorator" value="printable" />
            <param name="parameter.name" value="printable" />
            <param name="parameter.value" value="true" />
        </mapper>
        <!-- 페이지의 meta tag에 이름을 decorator라고 하고 거기에 적용할 레이아웃을 설정하면 된다. -->
        <mapper class="com.opensymphony.module.sitemesh.mapper.PageDecoratorMapper" >
            <param name="property" value="meta.decorator" />
        </mapper>
        <!-- /WEB-INF/decorators.xml 파일에 정의된 걸  적용한다. -->
        <mapper class="com.opensymphony.module.sitemesh.mapper.ConfigDecoratorMapper">
            <param name="config" value="${decorators-file}" />
        </mapper>
    </decorator-mappers>
</sitemesh>